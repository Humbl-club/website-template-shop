{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

{%- if section.settings.enable_quick_add -%}
{{ 'quick-add.css' | asset_url | stylesheet_tag }}
<script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
.section-{{ section.id }} {
  padding-top: {{ section.settings.padding_top | times: 0.8 | round: 0 }}px;
  padding-bottom: {{ section.settings.padding_bottom | times: 0.8 | round: 0 }}px;
}

@media screen and (min-width: 750px) {
  .section-{{ section.id }} {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
}  

{% if section.settings.top_border %}
.section-{{ section.id }} {
  padding-top: 0;
}
.section-{{ section.id }} .section-border {
  margin-bottom: {{ section.settings.padding_top | times: 0.5 }}px;
}
  
@media screen and (min-width: 750px) {
  .section-{{ section.id }} .section-border {
    margin-bottom: {{ section.settings.padding_top }}px;  
  }  
}
{% endif %}

{%- endstyle -%}

{% assign row_range = section.settings.columns_desktop %}

{% assign card_media_aspect_ratio = settings.card_img_aspect_ratio %}
{% assign prod_limit = section.settings.products_to_show %}

{% assign show_swiping_images = false %}
{% assign show_secondary_image = false %}
{% if section.settings.card_image_display == 'multi_images' %}
{% assign show_swiping_images = true %}
{% endif %}
{% if section.settings.card_image_display == 'second_image_hover' %}
{% assign show_secondary_image = true %}
{% endif %}

<div class="no-js-hidden">
  <product-recommendations
    id="productRecommendations" class="related-products section-{{ section.id }} isolate color-scheme-{{ section.settings.text_color }} color-scheme-{{ section.settings.bg_color }}"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ prod_limit }}"
  > 
      {%- if recommendations.performed? and recommendations.products_count > 0 -%}

      {% if section.settings.top_border %}
      <hr class="section-border section-border-color-{{ section.settings.border_color }} section-border-width-{{ section.settings.border_width }}">
      {% endif %}
        
      <div class="page-width section-header-std-padding align-{{ section.settings.heading_alignment }}">
      <h2 class="{{ section.settings.heading_size }}">{{ section.settings.heading }}</h2>
      </div>
      {%- endif -%}
      <div class="related-products-grid-wrapper{% if section.settings.heading_alignment and recommendations.products_count < 3 %} grid-justify-center{% endif %}{% if recommendations.products_count <= row_range %} grid-arrows-hide{% endif %} slider-arrows-position-{{ settings.carousel_arrow_position }}">
      <ul
        class="grid slider-grid slider-grid--columns-mobile-2 slider-grid--columns-tablet-{{ section.settings.columns_tablet }} slider-grid--columns-desktop-{{ row_range }} related-products-grid"
        role="list"
      >
        {% for recommendation in recommendations.products %}
          <li class="grid__item">
            {% render 'card-product',
              card_product: recommendation,
              media_aspect_ratio: card_media_aspect_ratio,
              show_secondary_image: show_secondary_image,
              show_swiping_images: show_swiping_images,
              pagination_color_scheme: section.settings.pagination_color_scheme,
              show_rating: section.settings.show_rating,
              show_price: section.settings.show_price,
              price_position: settings.card_price_position,
              show_sale_badges: settings.badges_show_sale,
              lazy_load: true,
              show_quick_add: section.settings.enable_quick_add,
              show_vendor: section.settings.show_vendor,
              show_vendor_inline: settings.card_show_vendor_inline,
              show_swatches: section.settings.show_swatches,
              section_id: section.id,
              placeholder: false
            %}
          </li>
        {% endfor %}
      </ul>
      <div class="slider-arrows arrow-style-{{ section.settings.arrow_style }}">
        <button class="slider-arrow-left" aria-label="{{ 'accessibility.left' | t }}">{% render 'icon-caret' %}</button>
        <button class="slider-arrow-right" aria-label="{{ 'accessibility.right' | t }}">{% render 'icon-caret' %}</button>
      </div>

      {% render 'scrolltrack' %}
      
      </div>
  </product-recommendations>
</div>

<script defer>
document.addEventListener('DOMContentLoaded', function () {
  const observer = new MutationObserver(function (mutationsList, observer) {
    for (const mutation of mutationsList) {
      if (mutation.type === 'childList' && mutation.target.id === 'productRecommendations') {
        setupSlider();
        setupCardSwiping();
        setupScrollTrack();
        observer.disconnect(); // Stop observing once content is loaded
        break;
      }
    }
  });

  observer.observe(document.getElementById('productRecommendations'), {
    childList: true,
    subtree: true,
  });

  function setupSlider() {
    const sliderContainer = document.querySelector('#productRecommendations .related-products-grid');
    const sliderWrapper = document.querySelector('#productRecommendations .related-products-grid-wrapper');
    const leftArrow = document.querySelector('#productRecommendations .slider-arrow-left');
    const rightArrow = document.querySelector('#productRecommendations .slider-arrow-right');

    if (!sliderContainer || !leftArrow || !rightArrow) return;

    const setArrowState = () => {
      const scrollPosition = sliderContainer.scrollLeft;
      const containerWidth = sliderContainer.clientWidth;
      const totalWidth = sliderContainer.scrollWidth;
      const scrollLimit = totalWidth - containerWidth;

      // Find the first image element within the slider-grid
      const firstImage = sliderContainer.querySelector('img');
      
      // Get the height of the first image
      const imageHeight = firstImage ? firstImage.clientHeight : 0;

      // Apply top margin to arrows based on half of the image height
      if (sliderWrapper.classList.contains('slider-arrows-position-middle') && leftArrow && rightArrow && imageHeight !== 0) {
        const marginTop = (imageHeight * 0.5) - 24;
        leftArrow.style.marginTop = marginTop + 'px';
        rightArrow.style.marginTop = marginTop + 'px';
      }      
      
      if (scrollPosition <= 0) {
        leftArrow.classList.add('disabled');
      } else {
        leftArrow.classList.remove('disabled');
      }

      if (scrollPosition >= scrollLimit - 2) {
        rightArrow.classList.add('disabled');
      } else {
        rightArrow.classList.remove('disabled');
      }
    };

    setArrowState();

    sliderContainer.addEventListener('scroll', setArrowState);
    window.addEventListener('resize', setArrowState);

    leftArrow.addEventListener('click', () => {
      sliderContainer.scrollBy({
        top: 0,
        left: -250,
        behavior: 'smooth',
      });
    });

    rightArrow.addEventListener('click', () => {
      sliderContainer.scrollBy({
        top: 0,
        left: 250,
        behavior: 'smooth',
      });
    });
  }

  function setupCardSwiping() {
    const swipeTracks = document.querySelectorAll('#productRecommendations .card-product--image-swipe-track');
    swipeTracks.forEach((swipeTrack) => {
      const leftArrow = swipeTrack.closest('.card-product--image-swipe-container').querySelector('.pcpa-left');
      const rightArrow = swipeTrack.closest('.card-product--image-swipe-container').querySelector('.pcpa-right');
      const paginationBullets = swipeTrack
        .closest('.card-product--image-swipe-container')
        .querySelectorAll('.product-card--pagination-bullet');

      const updateArrowState = () => {
        const maxScrollLeft = swipeTrack.scrollWidth - swipeTrack.clientWidth;
        if (swipeTrack.scrollLeft <= 0) {
          leftArrow.classList.add('faded');
        } else {
          leftArrow.classList.remove('faded');
        }

        if (swipeTrack.scrollLeft >= maxScrollLeft - 2) {
          rightArrow.classList.add('faded');
        } else {
          rightArrow.classList.remove('faded');
        }
      };

      const updatePagination = () => {
        const scrollLeft = swipeTrack.scrollLeft;
        const slideWidth = swipeTrack.querySelector('.card-product--image-slide')?.clientWidth || 1;
        const activeIndex = Math.round(scrollLeft / slideWidth) + 1;

        paginationBullets.forEach((bullet) => {
          if (parseInt(bullet.dataset.value, 10) === activeIndex) {
            bullet.classList.add('active');
          } else {
            bullet.classList.remove('active');
          }
        });
      };

      const onScroll = () => {
        updateArrowState();
        updatePagination();
      };

      swipeTrack.addEventListener('scroll', onScroll);

      leftArrow.addEventListener('click', () => {
        event.preventDefault(); // Prevent the link's default behavior
        const slideWidth = swipeTrack.querySelector('.card-product--image-slide')?.clientWidth || 1;
        swipeTrack.scrollBy({
          left: -slideWidth,
          behavior: 'smooth',
        });
      });

      rightArrow.addEventListener('click', () => {
        event.preventDefault(); // Prevent the link's default behavior
        const slideWidth = swipeTrack.querySelector('.card-product--image-slide')?.clientWidth || 1;
        swipeTrack.scrollBy({
          left: slideWidth,
          behavior: 'smooth',
        });
      });

      // Initialize states
      updateArrowState();
      updatePagination();
    });
  }

  // Slider custom scrollbar

  function setupScrollTrack() {
    const wrapper = document.querySelector('#productRecommendations .related-products-grid-wrapper');
    if (wrapper) {
      const slider = wrapper.querySelector('#productRecommendations .related-products-grid');
      const track = wrapper.querySelector('.slider-custom-scrollbar-track');
      const marker = wrapper.querySelector('.slider-custom-scrollbar-marker');
    
      if (slider && track && marker) {
        function updateMarkerWidthAndVisibility() {
          const visibleWidth = slider.clientWidth;
          const scrollableWidth = slider.scrollWidth;
    
          if (scrollableWidth <= visibleWidth) {
            track.classList.add('hidden');
          } else {
            track.classList.remove('hidden');
            const trackWidth = track.clientWidth;
            const markerWidth = (visibleWidth / scrollableWidth) * trackWidth;
            marker.style.width = `${markerWidth}px`;
          }
        }
    
        function updateMarkerPosition() {
          const scrollLeft = slider.scrollLeft;
          const scrollableWidth = slider.scrollWidth - slider.clientWidth;
          const trackWidth = track.clientWidth - marker.clientWidth;
    
          const left = (scrollableWidth > 0) ? (scrollLeft / scrollableWidth) * trackWidth : 0;
          marker.style.transform = `translateX(${left}px)`;
        }
    
        // Initial setup
        updateMarkerWidthAndVisibility();
        updateMarkerPosition();
    
        // On scroll
        slider.addEventListener('scroll', updateMarkerPosition);
    
        // On window resize
        window.addEventListener('resize', () => {
          updateMarkerWidthAndVisibility();
          updateMarkerPosition();
        });
      }
    }
  }

});
</script>


{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section",
  "enabled_on": {
    "templates": ["product"]
  },
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h3",
          "label": "t:sections.all.size.small"
        },
        {
          "value": "h2",
          "label": "t:sections.all.size.medium"
        },
        {
          "value": "h1",
          "label": "t:sections.all.size.large"
        }
      ],
      "default": "h2",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.alignment.left"
        },
        {
          "value": "center",
          "label": "t:sections.all.alignment.center"
        }
      ],
      "default": "left",
      "label": "t:sections.all.alignment.alignment_header"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 6,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_tablet",
      "min": 2,
      "max": 4,
      "step": 1,
      "default": 4,
      "label": "t:sections.all.layouts.columns_tablet"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 4,
      "step": 1,
      "default": 4,
      "label": "t:sections.all.layouts.columns_desktop"
    },
    {
      "type": "select",
      "id": "arrow_style",
      "label": "t:sections.all.buttons.arrow_style",
      "options": [
        {
          "value": "solid-inverted",
          "label": "t:sections.all.buttons.button_style_solid_inverted"
        },
        {
          "value": "solid",
          "label": "t:sections.all.buttons.button_style_solid"
        },
        {
          "value": "outline",
          "label": "t:sections.all.buttons.button_style_outline"
        },
        {
          "value": "outline-inverted",
          "label": "t:sections.all.buttons.button_style_outline_inverted"
        },        
        {
          "value": "minimal",
          "label": "t:sections.all.minimal"
        } 
      ],
      "default": "solid-inverted"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "card_image_display",
      "label": "t:sections.related-products.settings.card_image_display.label",
      "default": "second_image_hover",
      "options": [
        {
          "value": "second_image_hover",
          "label": "t:sections.related-products.settings.card_image_display.options__1.label"
        },
        {
          "value": "multi_images",
          "label": "t:sections.related-products.settings.card_image_display.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.related-products.settings.card_image_display.options__3.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "pagination_color_scheme",
      "label": "t:sections.related-products.settings.pagination_color_scheme.label",
      "info": "t:sections.related-products.settings.pagination_color_scheme.info",
      "default": "body",
      "options": [
        {
          "value": "body",
          "label": "t:sections.all.body"
        },
        {
          "value": "white",
          "label": "t:sections.all.colors.white.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "show_price",
      "default": true,
      "label": "t:sections.related-products.settings.show_price.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_swatches",
      "default": false,
      "label": "t:sections.related-products.settings.show_swatches.label",
      "info": "t:sections.related-products.settings.show_swatches.info"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.related-products.settings.show_rating.label",
      "info": "t:sections.related-products.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.related-products.settings.enable_quick_add.label",
      "info": "t:sections.related-products.settings.enable_quick_add.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.colors.label"
    },
    {
      "type": "select",
      "id": "text_color",
      "options": [
        {
          "value": "fg-body",
          "label": "t:sections.all.colors.background_body.label"
        },
        {
          "value": "fg-01",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "fg-02",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "fg-03",
          "label": "t:sections.all.colors.accent_3.label"
        },
        {
          "value": "fg-04",
          "label": "t:sections.all.colors.accent_4.label"
        }
      ],
      "default": "fg-body",
      "label": "t:sections.all.colors.text_color.label"
    },
    {
      "type": "select",
      "id": "bg_color",
      "options": [
        {
          "value": "bg-body",
          "label": "t:sections.all.colors.background_body.label"
        },
        {
          "value": "bg-01",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "bg-02",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "bg-03",
          "label": "t:sections.all.colors.background_3.label"
        },
        {
          "value": "bg-04",
          "label": "t:sections.all.colors.background_4.label"
        }
      ],
      "default": "bg-body",
      "label": "t:sections.all.colors.background_color.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 160,
      "step": 10,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 160,
      "step": 10,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 80
    },
    {
      "type": "header",
      "content": "t:sections.all.border"
    },
    {
    "type": "checkbox",
    "id": "top_border",
    "default": false,
    "label": "t:sections.all.border_top"
    },
    {
      "type": "select",
      "id": "border_width",
      "label": "t:sections.all.width",
      "options": [
        {
          "value": "normal",
          "label": "t:sections.all.normal"
        },
        {
          "value": "full",
          "label": "t:sections.all.full_width"
        }
        ],
      "default": "normal"
    },
    {
      "type": "select",
      "id": "border_color",
      "label": "t:sections.all.border_color",
      "options": [
        {
          "value": "dark",
          "label": "t:sections.all.colors.dark.label"
        },
        {
          "value": "light",
          "label": "t:sections.all.colors.light.label"
        }
        ],
      "default": "dark"
    }
  ]
}
{% endschema %}